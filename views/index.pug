extends layout

block content
  link(rel='stylesheet', href='/stylesheets/index.css')
  script(src='/plotly.min.js')
  div(class="container")
    div(class='navbar')
      h1(class='project-name') 
        b NGSPICE Playground
    div(class="row")
      div(class="col-lg-6")
        form(role="form")
          div(class="form-group editorArea")
            textarea(class="form-control", spellcheck='false', id="netlist", rows="15")
              | *** RF switch circuit ***
              |  * Author: Xing GUO
              |  * Example file
              |  * Input source
              |  vs 1 0 dc 0V ac 1V sin(0V 1V 100MegHz 20ns 0)
              |  Rs in 1 50ohm
              |
              | * Switch
              | Ci in 4 1.6nF
              | Rb 4 3 2.1k
              | Lc1 3 2 100uH
              | D1 4 50 mydiode
              | vmeter 50 5 dc 0
              | Lc2 5 0 100uH
              | cout 5 out 1.6n
              |
              | * Load
              | Rload out 0 1k
              |
              | * DC biasing
              | vcc 2 0 5V
              |             
              | .model mydiode d (is=1e-15A n=1)
              |
              | .tran .1ns 100ns
              |
              | * Please do not remove this line
              | .control
              | 	run
              | .endc
              | .end
            textarea(class="form-control", id="plot_option", spellcheck='false', rows="2") v(in); v(out); v(4, 5)
        div(class="buttonArea")
          button(id="run-code", class="btn btn-success", style='margin-right: 5px') Run Code
          button(id="save-netlist", class="btn btn-success", style='margin-right: 5px') Save Netlist
          button(id="clear-plot", class="btn btn-danger", style='margin-right: 5px') Clear Plots
      div(id="graph", style='width: 600px; height: 500px', class="col-lg-6")
        div(class="plot", id="plot", style='margin-top: 10px; width: 600px;')
        div(id="messages", style='margin-top: 10px;')
          div(class="fromServer alert alert-success", role='alert') Server message goes here
  //- scripts
  script(src='/socket.io/socket.io.js')
  - let socket_url = socket_conf;
  //- socket things
  script.
    let socket = io.connect('#{socket_url}');
    // connect succeed
    socket.on('loading-page', function (data) {
      socket.emit('socket-id', { socket_id: socket.id });
    });
  script.
    // button callback event
    let netlist_content = document.getElementById('netlist');
    let plot_option_content = document.getElementById('plot_option');
    let submit_button = document.getElementById('run-code');
    let save_netlist_button = document.getElementById('save-netlist');
    let clear_plot_button = document.getElementById('clear-plot');
    
    // submit_button callback
    submit_button.addEventListener('click', () => {
      let netlist = netlist_content.value;
      let plot_option = plot_option_content.value
      socket.emit('netlist-data', { socket_id: socket.id, netlist: netlist, plot_option: plot_option });
    });
    
    // save_netlist_button callback
    save_netlist_button.addEventListener('click', () => {
      // do nothing
    });
    
    // clear_plot_button callback
    clear_plot_button.addEventListener('click', () => {
      Plotly.purge('plot');
    });
    
  //- plotly.js things
  script.
    let colors = ['rgb(148, 0, 211)', 'rgb(255, 127, 0)', 'rgb(0, 0, 255)', 
                  'rgb(255, 0 , 0)', 'rgb(255, 255, 0)', 'rgb(75, 0, 130)',
                  'rgb(0, 255, 0)']
    socket.on('netlist-data', (data) => {
      // console.log(data);
      let traces = [];
      for (var i = 0; i < data.curves.length; i ++) {
        traces.push({ x: data.curves[i].x, 
                      y: data.curves[i].y, 
                      connectgaps: false, 
                      name: data.label_info.y_label[data.curves[i].belong_to],
                      marker: {color: colors[data.curves[i].belong_to]}});
      }
      Plotly.newPlot('plot', traces);
    });
    
    
